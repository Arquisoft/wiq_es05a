openapi: 3.0.0
info:
  title: Gatewayservice API
  description: Gateway OpenAPI specification.
  version: 0.1.0
servers:
  - url: http://localhost:8000
    description: Development server
  - url: http://SOMEIP:8000
    description: Production server
paths:
  /adduser:
    post:
      summary: Add a new user to the database.
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        '200':
          description: User added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: User ID
                  password:
                    type: string
                    description: Hashed password
                    example: $2b$10$ZKdNYLWFQxzt5Rei/YTc/OsZNi12YiWz30JeUFHNdAt7MyfmkTuvC
                  _id:
                    type: string
                    description: Identification
                    example: 65f756db3fa22d227a4b7c7d
                  createdAt:
                    type: string
                    description: Creation date.
                    example: '2024-03-17T20:47:23.935Z'
                  ___v:
                    type: integer
                    example: '0'                                        
        '400':
          description: Failed to add user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: getaddrinfo EAI_AGAIN mongodb
  /health:
    get:
      summary: Check the health status of the service.
      operationId: checkHealth
      responses:
        '200':
          description: Service is healthy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Health status.
                    example: OK
  /login:
    post:
      summary: Log in to the system.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        '200':
          description: Login successful. Returns user token, username, and creation date.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NWY3NTZkYjNmYTIyZDIyN2E0YjdjN2QiLCJpYXQiOjE3MTA3MDg3NDUsImV4cCI6MTcxMDcxMjM0NX0.VMG_5DOyQ4GYlJQRcu1I6ICG1IGzuo2Xuei093ONHxw
                  username:
                    type: string
                    description: Username.
                    example: student
                  createdAt:
                    type: string
                    description: Creation date.
                    example: '2024-03-17T20:47:23.935Z'
        '401':
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Shows the error info..
                    example: Invalid credentials
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /pregunta:
    get:
      summary: Generate a question.
      operationId: pregunta
      responses:
        '200':
          description: Returns the generated question with a right and three incorrect answers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  question:
                    type: string
                    description: Generated question.
                    example: ¿Cuál es la capital de España?
                  answerGood:
                    type: string
                    description: Respuesta correcta a la pregunta generada.
                    example: Madrid
                  answers:
                    type: array
                    description: Respuestas correcta e incorrectas.
                    items:
                      type: string
                      example: 
                        - Madrid
                        - Abu Dabi
                        - Washinton D. C.
                        - Tokyo
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /updateCorrectAnswers:
    get:
      summary: Updates the data of the user, increasing his number of correct answers.
      operationId: updateCorrectAnswers
      parameters:
        in: path
        name: params
        required: true
        description: Parameters for the update (username and numAnswers)
        schema:
          type: object
          properties:
            username:
              type: string
            numAnswers:
              type: integer
      responses:
        '200':
          description: Updates the data correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Respuestas correctas actualizada con éxito
        '404':
          description: The user is not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Usuario no encontrado
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    description: Error information.
                    example: Error al actualizar las respuestas correctas
  /updateIncorrectAnswers:
    get:
      summary: Updates the data of the user, increasing his number of incorrect answers.
      operationId: updateIncorrectAnswers
      parameters:
        in: path
        name: params
        required: true
        description: Parameters for the update (username and numAnswers)
        schema:
          type: object
          properties:
            username:
              type: string
            numAnswers:
              type: integer
      responses:
        '200':
          description: Updates the data correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Respuestas incorrectas actualizada con éxito
        '404':
          description: The user is not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Usuario no encontrado
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    description: Error information.
                    example: Error al actualizar las respuestas incorrectas
 /updateCompletedGames:
    get:
      summary: Update the number of completed games by the user.
      operationId: updateCompletedGames
      parameters:
        in: path
        name: username
        required: true
        description: Username for the update of data
        schema:
          type: string
      responses:
        '200':
          description: Finds the data of the user correctly.
          content:
            application/json:
              schema:
                type: user
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Juegos completados actualizado con éxito
        '404':
          description: The user is not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Usuario no encontrado
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    description: Error information.
                    example: Error al actualizar Juegos completados
 /getUserData:
    get:
      summary: Gets the data of an user.
      operationId: getUserData
      parameters:
        in: path
        name: username
        required: true
        description: Username for the search of data
        schema:
          type: string
      responses:
        '200':
          description: Finds the data of the user correctly.
          content:
            application/json:
              schema:
                type: user
                properties:
                  username:
                    type: string
                    example: Pablo
                  password:
                    type: integer
                    example: pass
                  createdAt:
                    type: date
                  correctAnswers:
                    type: integer
                  incorrectAnswers:
                    type: integer
                  completedGames:
                    type: integer
                  averageTime:
                    type: integer
        '404':
          description: The user is not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Usuario no encontrado
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    description: Error information.
                    example: Error al obtener los datos de usuario
  
